Whta is service & why we required

Services in Angular  allow you to define code that's accessible and reusable throughout multiple components. A common use case for services is when you need to communicate with a backend of some sort to send and receive data.

Service is simple class to get the data from back end to display in view.Service is act as intermediator between component & Back end server  insetad of hard coded code we can get data from server for that we can write logic  within the component calling http endpoint url through the service



 without service drawback is 
1 to write code in the component,so that component is tightly couple to http endpoint url iteself
2 if we want to display list of courses to other component then again we have write that code again & again on respective component
3 A component should not include any logic other than presentation logic. (A logic behind the  view when we click a button or etc)

So for that purpose we use the service to make a seperate class

let service=new CoursesService();

however it is problem for implementation for the new operator we tightly coupled (means to create instance of the service means u again create a instance of service into component  ) that courses service to this component
    Again next issue is to add some parameter to service for that case again we have to pass paramerter to the constructor and again that pass to service  we have to implement multiple changes
    So instead of we create the instance of service to do that angular for us so delete this line from here

now angular create a instance for us and it create a dependancy of courses service this is called dependancy injection- to instruct the angular to inject dependancy of component into its constructor
so what is dependancy injection - injecting providing dependancy of class into a constructor now angular built in dependancy injection framework but we need to register our dependancy in our module
When we create dependancy of service the angular create a only one instance for that service it is called singleton pattern